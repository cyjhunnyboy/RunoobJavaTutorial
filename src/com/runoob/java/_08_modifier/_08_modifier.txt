Java 修饰符
    Java语言提供了很多修饰符，主要分为以下两类：
    --访问修饰符
    --非访问修饰符
    修饰符用来定义类、方法或者变量，通常放在语句的最前端。

    一、访问控制修饰符
        在Java中，可以使用访问控制来保护对类、变量、方法和构造方法的访问。Java支持4种不同的访问权限。
        --default（即默认，什么也不写）：在同一个包内可见，不使用任何修饰符。使用对象：类、接口、变量、方法。
        --private：在同一个类内可见。使用对象：变量、方法。注意：不能修饰类（外部类）
        --public：对所有类可见。使用对象：类、接口、变量、方法。
        --protected：对同一包内和所有子类可见。使用对象：变量、方法。注意：不能修饰类（外部类）。
        修饰符     当前类     同一包内     子孙类（同一包）       子孙类（不同包）    其他包
        public      Y           Y           Y                       Y           Y
        protected   Y           Y           Y                       Y/N         N
        default     Y           Y           Y                       N           N
        private     Y           N           N                       N           N

        1、默认访问修饰符--不使用任何关键字
            --使用默认访问修饰符声明的变量和方法，对同一个包内的类是可见的。接口的变量都隐式声明为public static final。
              而接口里的方法默认情况下访问权限为public。

        2、私有访问修饰发--private
            --私有访问修饰符是最严格的访问级别，所以被声明为private的方法、变量和构造方法只能被所属类访问，并且类和接口不能声明为private。
            --声明为私有访问类型的变量只能通过类中公共的gettter方法被外部类访问。
            --private访问修饰符的使用主要用来隐藏类的实现细节和保护类的数据。

        3、公有访问修饰符-public
            --被声明为public的类、方法、构造方法和接口能够被任何其他类访问。
            --如果几个相互访问的public类分布在不同的包中，则需要导入相应public类所在的包。由于类的继承性，类所有的公有方法和变量都能被其子类继承。

        4、受保护的访问修饰符-protected
            protected需要从以下两点来分析说明：
            --子类和基类在同一个包：被声明为protected的变量、方法和构造器能被同一个包中的任何其他类访问。
            --子类和基类不在同一个包：那么在子类中，子类实例可以访问呢其从基类继承而来的protected方法，而不能访问基类实例的protected方法。
            protected可以修饰数据成员，构造方法、方法成员，不能修饰类（内部类除外）。
            接口及接口的成员变量和成员方法不能声明为protected。
            子类能访问protected修饰符声明的方法和变量，这样能保护不相关的类使用这些方法和变量。
            如果我们只想让该方法对其所在的子类可见，则该方法声明为protected。

        5、访问控制和继承
            请注意以下方法继承的规则：
            --父类中声明为public的方法在子类中也必须为public
            --父类中声明为protected的方法在子类中要么声明为protected，要么声明为public，不能声明为private。
            --父类中声明为private的方法，不能够被子类继承。

        6、非访问修饰符
