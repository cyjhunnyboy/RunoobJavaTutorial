Java 基本数据类型
    变量就是申请内存来存储值。也就是说，当创建变量的时候，需要在内存中申请空间。
    内存管理系统根据变量的类型为变量分配存储空间，分配的空间只能用来存储该类型数据。
    代码                  内存
    int x = 7;           x          y
    int y = 10;          7          10

    因此，通过定义不同类型的变量，可以在内存中存储整数、小数或者字符。
    Java的两大数据类型：
    ---内置数据类型
    ---引用数据类型

    一、内置数据类型
        Java语言提供了八中基本类型。六种数字类型（四个整数型，两个浮点型），一种字符类型，还有一种布尔型。

        1、byte
            --byte数据类型是8位、有符号的，以二进制补码表示的整数；
            --最小值是：-128（-2^7）；
            --最大值是：127（2^7-1）；
            --默认值是：0；
            --byte类型用在大型数组中节约空间，主要代替整数，因为byte变量占用的空间只有int类型的四分之一；
            --例子：byte a = 100; byte b = -50;

        2、short
            --short数据类型是16位、有符号的，以二进制补码表示的整数；
            --最小值：-32768（-2^15）；
            --最大值：32767（2^15-1）；
            --short数据类型也可以像byte那样节省空间，一个short变量是int型变量所占空间的二分之一；
            --默认值：0；
            --例子：short s = 1000; short r = -2000;

        3、int
            --int数据类型是32位、有符号的以二进制补码表示的整数；
            --最小值是：-2,147,483,648（-2^31）；
            --最大值是：2,147,483,647（2^31-1）；
            --一般地整型变量默认为int类型；
            --默认值是：0；
            --例子：int a = 100000; int b = -200000;

        4、long
            --long数据类型是64位、有符号的以二进制补码表示的整数；
            --最小值是：-9,223,372,036,854,775,808（-2^63）；
            --最大值是：9,223,372,036,854,775,807（2^63-1）；
            --这种类型主要使用在需要比较大整数的系统上；
            --默认值：0L
            --例子：long a = 100000L; long b = -200000L;
            "L"理论上不分大小写，但是若写成"l"容易与数字"1"混淆，不容易分辩。所以最好大写。

        5、float
            --float数据类型是单精度、32位、符合IEEE754标准的浮点数；
            --float在存储大型浮点数组的时候可以节省内存空间；
            --默认值是：0.0f；
            --浮点数不能用来表示精确的值，如货币；
            --例子：float f = 234.5f;

        6、double
            --double数据类型是双精度、64位，符合IEEE754标准的浮点数；
            --浮点数的默认类型为double类型；
            --double类型同样不能表示精确的值，如货币；
            --默认值是：0.0d；
            --例子：
                1）double d1 = 70;
                2）double d2 = 7.;
                3）double d3 = 8.0;
                4）double d4 = 8.D;
                5）double d4 = 12.9867;

                7是一个int字面量，而7D，7.和8.0是double字面量。

        7、boolean
            --boolean数据类型表示一位的信息；
            --只有两个取值：true和false；
            --这种类型只作为一种标志来记录true/false情况；
            --默认值是false;
            --例子：boolean one = true;

        8、char
            --char类型是一个单一的16位unicode字符；
            --最小值是：\u0000（十进制等效值为0）；
            --最大值是：\uffff（即为65535）；
            --char数据类型可以存储任何字符；
            --例子：char letter = 'A';

        Float和Double的最小值和最大值都是以科学记数法的形式输出的，结尾的"E+数字"表示E之前的数字要乘以10的多少次方。
        比如3.14E3就是3.14×10^3=3140；3.14E-3就是3.14x10^-3=0.00314。

        实际上，JAVA中还存在另外一种基本类型void，它也有对应的包装类java.lang.Void，不过我们无法直接对它们进行操作。

    二、引用类型
        --在Java中，引用类型的变量非常类似于C/C++的指针。引用类型指向一个对象，指向对象的变量是引用变量。
          这些变量在声明时被指定为一个特定的类型，比如：Employee、Puppy等。变量一旦声明后，类型就不能被改变了。
        --对象、数组都是引用数据类型。
        --所有引用类型的默认值都是null。
        --一个引用变量可以用来引用任何与之兼容的类型。
        --例子：Site site = new Site("Runoob")。

    三 Java 常量
        常量在程序运行时是不能被修改的。
        在Java中使用final关键字来修饰常量，声明方式和变量类似：
            final double PI = 3.1415927;
        虽然常量名也可以用小写，但为了便于识别，通常使用大写字母表示常量。
        字面量可以赋给任何内置类型的变量。
            例如：
                byte a = 68;
                char a = 'A';
        byte、int、long和short都可以用十进制、16进制以及8进制的方式来表示。
        当使用字面量的时候，前缀0表示8进制，而前缀0x代表16进制.
            例如：
                int decimal = 100;
                int octal = 0144;
                int hexa =  0x64;
        和其他语言一样，Java的字符串常量也是包含在两个引号之间的字符序列。下面是字符串型字面量的例子：
            例如：
                String s1 = "Hello World";
                String s2 = "two\nlines";
                String s3 = "\"This is in quotes\"";
        字符串常量和字符变量都可以包含任何Unicode字符。
            例如：
                char a = '\u0001';
                String a = "\u0001";

        Java语言支持一些特殊的转义字符序列。
            符号                      字符含义
            \n                       换行（0x0a）
            \r                       回车（0x0d）
            \f                       换页符（0x0c）
            \b                       退格（0x08）
            \0                       空字符（0x0）
            \s                       空格（0x20）
            \t                       制表符
            \"                       双引号
            \'                       单引号
            \\                       反斜杠
            \ddd                     八进制字符（ddd）
            \uxxxx                   16进制Unicode字符（xxxx）

    四、自动类型转换
        整型、实型（常量）、字符型数据可以混合运算。运算中，不同类型的数据先转化为同一类型，然后进行运算。
        转换从低级到高级
        低   ----------------------------------->    高
           byte, short, char——>int——>float——>double

        数据类型转换必须满足如下规则：
        1）不能对boolean类型进行类型转换。
        2）不能把对象类型转换成不相关类的对象。
        3）在把容量大的类型转换为容量小的类型时必须使用强制类型转换。
        4）转换过程中可能导致溢出或损失精度。例如：
            int i = 128;
            byte b = (byte) i;
            因为byte类型是8位，最大值位127，所以当int强制转换为byte类型时，值128时候就会导致溢出。
        5）浮点数到整数的转换是通过舍弃小数得到，而不是四舍五入，例如：
            (int) 23.7 == 23;
            (int) -45.89f == -45;

        1、自动类型转换
            必须满足转换前的数据类型的位数要低于转换后的数据类型，例如：short数据类型的位数为16位，就可以
            自动转换位数为32的int类型，同样float数据类型的位数为32，可以自动转换为64为的double类型。

        2、强制类型转换
            1）条件是转换的数据类型必须是兼容的。
            2）格式：(type)value type是强制类型转换后的数据类型

        3、隐含强制类型转换
            1）整数的默认类型是int。
            2）小数默认是double类型浮点型，在定义float类型时必须在数字后面跟上F或者f。
